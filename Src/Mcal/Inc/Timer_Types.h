/**********************************************************************************************************************
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  Timer_Types.h
 *       Module:  - Mcal
 *
 *  Description:  <Write File DESCRIPTION here>     
 *  
 *********************************************************************************************************************/
#ifndef TIMER_TYPES_H
#define TIMER_TYPES_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
#include "Platform_Types.h"

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/
typedef enum
{
	GPT_16_32_BIT_TIMER0,
	GPT_16_32_BIT_TIMER1,
	GPT_16_32_BIT_TIMER2,
	GPT_16_32_BIT_TIMER3,
	GPT_16_32_BIT_TIMER4,
	GPT_16_32_BIT_TIMER5,
	GPT_32_64_BIT_WIDE_TIMER0,
	GPT_32_64_BIT_WIDE_TIMER1,
	GPT_32_64_BIT_WIDE_TIMER2,
	GPT_32_64_BIT_WIDE_TIMER3,
	GPT_32_64_BIT_WIDE_TIMER4,
	GPT_32_64_BIT_WIDE_TIMER5
}Gpt_ChannelType; 

typedef uint32 Gpt_ChannelTickFrequency;
typedef uint32 GptChannelTickValueMax;
typedef uint32 Gpt_ValueType;

typedef enum
{
	GPT_CH_MODE_CONTINUOUS,
	GPT_CH_MODE_ONESHOT
}ChannelMode;

typedef void(*GptNotification)(void);

typedef struct
{
	Gpt_ChannelType  					channel;
	Gpt_ChannelTickFrequency  channelTickFreq;
	GptChannelTickValueMax  	channelTickMaxValue;
	ChannelMode								channelMode;
	GptNotification						gptNotification;
}Gpt_ConfigType;

/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

 
#endif  /* TIMER_TYPES_H */

/**********************************************************************************************************************
 *  END OF FILE: Timer_Types.h
 *********************************************************************************************************************/